package ui

import (
	"fmt"
	"github.com/danielecanzoneri/gb-emulator/pkg/debug"
	"strings"
)

type opcodeFormatter func(string, ...uint8) string

var (
	n16Formatter = func(name string, data ...uint8) string {
		n16 := uint16(data[0]) | uint16(data[1])<<8
		return strings.Replace(name, "n16", fmt.Sprintf("%04X", n16), 1)
	}
	n8Formatter = func(name string, data ...uint8) string {
		return strings.Replace(name, "n8", fmt.Sprintf("%02X", data[0]), 1)
	}
	e8Formatter = func(name string, data ...uint8) string {
		return strings.Replace(name, "e8", fmt.Sprintf("%0X", int8(data[0])), 1)
	}
	a16Formatter = func(name string, data ...uint8) string {
		n16 := uint16(data[0]) | uint16(data[1])<<8
		return strings.Replace(name, "a16", fmt.Sprintf("%04X", n16), 1)
	}
	a8Formatter = func(name string, data ...uint8) string {
		return strings.Replace(name, "a8", fmt.Sprintf("FF%02X", data[0]), 1)
	}
)

type OpcodeInfo struct {
	name   string
	length int // Including opcode
	format opcodeFormatter
}

// getOpcodeInfo returns name and length of the opcode at the given address
func getOpcodeInfo(state *debug.GameBoyState, addr uint16) (string, int, []uint8) {
	opcode := state.Memory[addr]
	opcodeInfo := opcodesInfo[opcode]

	var name string
	var bytes []uint8
	switch opcodeInfo.length {
	case 0:
		fallthrough
	case 1:
		name = opcodeInfo.name
		bytes = []uint8{opcode}
	case 2:
		data1 := state.Memory[addr+1]
		name = opcodeInfo.format(opcodeInfo.name, data1)
		bytes = []uint8{opcode, data1}
	case 3:
		data1 := state.Memory[addr+1]
		data2 := state.Memory[addr+2]
		name = opcodeInfo.format(opcodeInfo.name, data1, data2)
		bytes = []uint8{opcode, data1, data2}
	}

	return name, opcodeInfo.length, bytes
}

var opcodesInfo = map[uint8]OpcodeInfo{
	0x00: {name: "NOP", length: 1, format: nil},
	0x01: {name: "LD BC, n16", length: 3, format: n16Formatter},
	0x02: {name: "LD [BC], A", length: 1, format: nil},
	0x03: {name: "INC BC", length: 1, format: nil},
	0x04: {name: "INC B", length: 1, format: nil},
	0x05: {name: "DEC B", length: 1, format: nil},
	0x06: {name: "LD B, n8", length: 2, format: n8Formatter},
	0x07: {name: "RLCA", length: 1, format: nil},
	0x08: {name: "LD [a16], SP", length: 3, format: a16Formatter},
	0x09: {name: "ADD HL, BC", length: 1, format: nil},
	0x0A: {name: "LD A, [BC]", length: 1, format: nil},
	0x0B: {name: "DEC BC", length: 1, format: nil},
	0x0C: {name: "INC C", length: 1, format: nil},
	0x0D: {name: "DEC C", length: 1, format: nil},
	0x0E: {name: "LD C, n8", length: 2, format: n8Formatter},
	0x0F: {name: "RRCA", length: 1, format: nil},

	0x10: {name: "STOP n8", length: 2, format: e8Formatter},
	0x11: {name: "LD DE, n16", length: 3, format: n16Formatter},
	0x12: {name: "LD [DE], A", length: 1, format: nil},
	0x13: {name: "INC DE", length: 1, format: nil},
	0x14: {name: "INC D", length: 1, format: nil},
	0x15: {name: "DEC D", length: 1, format: nil},
	0x16: {name: "LD D, n8", length: 2, format: n8Formatter},
	0x17: {name: "RLA", length: 1, format: nil},
	0x18: {name: "JR e8", length: 2, format: e8Formatter},
	0x19: {name: "ADD HL, DE", length: 1, format: nil},
	0x1A: {name: "LD A, [DE]", length: 1, format: nil},
	0x1B: {name: "DEC DE", length: 1, format: nil},
	0x1C: {name: "INC E", length: 1, format: nil},
	0x1D: {name: "DEC E", length: 1, format: nil},
	0x1E: {name: "LD E, n8", length: 2, format: n8Formatter},
	0x1F: {name: "RRA", length: 1, format: nil},

	0x20: {name: "JR NZ, e8", length: 2, format: e8Formatter},
	0x21: {name: "LD HL, n16", length: 3, format: n16Formatter},
	0x22: {name: "LD [HL+], A", length: 1, format: nil},
	0x23: {name: "INC HL", length: 1, format: nil},
	0x24: {name: "INC H", length: 1, format: nil},
	0x25: {name: "DEC H", length: 1, format: nil},
	0x26: {name: "LD H, n8", length: 2, format: n8Formatter},
	0x27: {name: "DAA", length: 1, format: nil},
	0x28: {name: "JR Z, e8", length: 2, format: e8Formatter},
	0x29: {name: "ADD HL, HL", length: 1, format: nil},
	0x2A: {name: "LD A, [HL+]", length: 1, format: nil},
	0x2B: {name: "DEC HL", length: 1, format: nil},
	0x2C: {name: "INC L", length: 1, format: nil},
	0x2D: {name: "DEC L", length: 1, format: nil},
	0x2E: {name: "LD L, n8", length: 2, format: n8Formatter},
	0x2F: {name: "CPL", length: 1, format: nil},

	0x30: {name: "JR NC, e8", length: 2, format: e8Formatter},
	0x31: {name: "LD SP, n16", length: 3, format: n16Formatter},
	0x32: {name: "LD [HL-], A", length: 1, format: nil},
	0x33: {name: "INC SP", length: 1, format: nil},
	0x34: {name: "INC [HL]", length: 1, format: nil},
	0x35: {name: "DEC [HL]", length: 1, format: nil},
	0x36: {name: "LD [HL], n8", length: 2, format: n8Formatter},
	0x37: {name: "SCF", length: 1, format: nil},
	0x38: {name: "JR C, e8", length: 2, format: e8Formatter},
	0x39: {name: "ADD HL, SP", length: 1, format: nil},
	0x3A: {name: "LD A, [HL-]", length: 1, format: nil},
	0x3B: {name: "DEC SP", length: 1, format: nil},
	0x3C: {name: "INC A", length: 1, format: nil},
	0x3D: {name: "DEC A", length: 1, format: nil},
	0x3E: {name: "LD A, n8", length: 2, format: n8Formatter},
	0x3F: {name: "CCF", length: 1, format: nil},

	0x40: {name: "LD B, B", length: 1, format: nil},
	0x41: {name: "LD B, C", length: 1, format: nil},
	0x42: {name: "LD B, D", length: 1, format: nil},
	0x43: {name: "LD B, E", length: 1, format: nil},
	0x44: {name: "LD B, H", length: 1, format: nil},
	0x45: {name: "LD B, L", length: 1, format: nil},
	0x46: {name: "LD B, [HL]", length: 1, format: nil},
	0x47: {name: "LD B, A", length: 1, format: nil},
	0x48: {name: "LD C, B", length: 1, format: nil},
	0x49: {name: "LD C, C", length: 1, format: nil},
	0x4A: {name: "LD C, D", length: 1, format: nil},
	0x4B: {name: "LD C, E", length: 1, format: nil},
	0x4C: {name: "LD C, H", length: 1, format: nil},
	0x4D: {name: "LD C, L", length: 1, format: nil},
	0x4E: {name: "LD C, [HL]", length: 1, format: nil},
	0x4F: {name: "LD C, A", length: 1, format: nil},

	0x50: {name: "LD D, B", length: 1, format: nil},
	0x51: {name: "LD D, C", length: 1, format: nil},
	0x52: {name: "LD D, D", length: 1, format: nil},
	0x53: {name: "LD D, E", length: 1, format: nil},
	0x54: {name: "LD D, H", length: 1, format: nil},
	0x55: {name: "LD D, L", length: 1, format: nil},
	0x56: {name: "LD D, [HL]", length: 1, format: nil},
	0x57: {name: "LD D, A", length: 1, format: nil},
	0x58: {name: "LD E, B", length: 1, format: nil},
	0x59: {name: "LD E, C", length: 1, format: nil},
	0x5A: {name: "LD E, D", length: 1, format: nil},
	0x5B: {name: "LD E, E", length: 1, format: nil},
	0x5C: {name: "LD E, H", length: 1, format: nil},
	0x5D: {name: "LD E, L", length: 1, format: nil},
	0x5E: {name: "LD E, [HL]", length: 1, format: nil},
	0x5F: {name: "LD E, A", length: 1, format: nil},

	0x60: {name: "LD H, B", length: 1, format: nil},
	0x61: {name: "LD H, C", length: 1, format: nil},
	0x62: {name: "LD H, D", length: 1, format: nil},
	0x63: {name: "LD H, E", length: 1, format: nil},
	0x64: {name: "LD H, H", length: 1, format: nil},
	0x65: {name: "LD H, L", length: 1, format: nil},
	0x66: {name: "LD H, [HL]", length: 1, format: nil},
	0x67: {name: "LD H, A", length: 1, format: nil},
	0x68: {name: "LD L, B", length: 1, format: nil},
	0x69: {name: "LD L, C", length: 1, format: nil},
	0x6A: {name: "LD L, D", length: 1, format: nil},
	0x6B: {name: "LD L, E", length: 1, format: nil},
	0x6C: {name: "LD L, H", length: 1, format: nil},
	0x6D: {name: "LD L, L", length: 1, format: nil},
	0x6E: {name: "LD L, [HL]", length: 1, format: nil},
	0x6F: {name: "LD L, A", length: 1, format: nil},

	0x70: {name: "LD [HL], B", length: 1, format: nil},
	0x71: {name: "LD [HL], C", length: 1, format: nil},
	0x72: {name: "LD [HL], D", length: 1, format: nil},
	0x73: {name: "LD [HL], E", length: 1, format: nil},
	0x74: {name: "LD [HL], H", length: 1, format: nil},
	0x75: {name: "LD [HL], L", length: 1, format: nil},
	0x76: {name: "HALT", length: 1, format: nil},
	0x77: {name: "LD [HL], A", length: 1, format: nil},
	0x78: {name: "LD A, B", length: 1, format: nil},
	0x79: {name: "LD A, C", length: 1, format: nil},
	0x7A: {name: "LD A, D", length: 1, format: nil},
	0x7B: {name: "LD A, E", length: 1, format: nil},
	0x7C: {name: "LD A, H", length: 1, format: nil},
	0x7D: {name: "LD A, L", length: 1, format: nil},
	0x7E: {name: "LD A, [HL]", length: 1, format: nil},
	0x7F: {name: "LD A, A", length: 1, format: nil},

	0x80: {name: "ADD A, B", length: 1, format: nil},
	0x81: {name: "ADD A, C", length: 1, format: nil},
	0x82: {name: "ADD A, D", length: 1, format: nil},
	0x83: {name: "ADD A, E", length: 1, format: nil},
	0x84: {name: "ADD A, H", length: 1, format: nil},
	0x85: {name: "ADD A, L", length: 1, format: nil},
	0x86: {name: "ADD A, [HL]", length: 1, format: nil},
	0x87: {name: "ADD A, A", length: 1, format: nil},
	0x88: {name: "ADC A, B", length: 1, format: nil},
	0x89: {name: "ADC A, C", length: 1, format: nil},
	0x8A: {name: "ADC A, D", length: 1, format: nil},
	0x8B: {name: "ADC A, E", length: 1, format: nil},
	0x8C: {name: "ADC A, H", length: 1, format: nil},
	0x8D: {name: "ADC A, L", length: 1, format: nil},
	0x8E: {name: "ADC A, [HL]", length: 1, format: nil},
	0x8F: {name: "ADC A, A", length: 1, format: nil},

	0x90: {name: "SUB A, B", length: 1, format: nil},
	0x91: {name: "SUB A, C", length: 1, format: nil},
	0x92: {name: "SUB A, D", length: 1, format: nil},
	0x93: {name: "SUB A, E", length: 1, format: nil},
	0x94: {name: "SUB A, H", length: 1, format: nil},
	0x95: {name: "SUB A, L", length: 1, format: nil},
	0x96: {name: "SUB A, [HL]", length: 1, format: nil},
	0x97: {name: "SUB A, A", length: 1, format: nil},
	0x98: {name: "SBC A, B", length: 1, format: nil},
	0x99: {name: "SBC A, C", length: 1, format: nil},
	0x9A: {name: "SBC A, D", length: 1, format: nil},
	0x9B: {name: "SBC A, E", length: 1, format: nil},
	0x9C: {name: "SBC A, H", length: 1, format: nil},
	0x9D: {name: "SBC A, L", length: 1, format: nil},
	0x9E: {name: "SBC A, [HL]", length: 1, format: nil},
	0x9F: {name: "SBC A, A", length: 1, format: nil},

	0xA0: {name: "AND A, B", length: 1, format: nil},
	0xA1: {name: "AND A, C", length: 1, format: nil},
	0xA2: {name: "AND A, D", length: 1, format: nil},
	0xA3: {name: "AND A, E", length: 1, format: nil},
	0xA4: {name: "AND A, H", length: 1, format: nil},
	0xA5: {name: "AND A, L", length: 1, format: nil},
	0xA6: {name: "AND A, [HL]", length: 1, format: nil},
	0xA7: {name: "AND A, A", length: 1, format: nil},
	0xA8: {name: "XOR A, B", length: 1, format: nil},
	0xA9: {name: "XOR A, C", length: 1, format: nil},
	0xAA: {name: "XOR A, D", length: 1, format: nil},
	0xAB: {name: "XOR A, E", length: 1, format: nil},
	0xAC: {name: "XOR A, H", length: 1, format: nil},
	0xAD: {name: "XOR A, L", length: 1, format: nil},
	0xAE: {name: "XOR A, [HL]", length: 1, format: nil},
	0xAF: {name: "XOR A, A", length: 1, format: nil},

	0xB0: {name: "OR A, B", length: 1, format: nil},
	0xB1: {name: "OR A, C", length: 1, format: nil},
	0xB2: {name: "OR A, D", length: 1, format: nil},
	0xB3: {name: "OR A, E", length: 1, format: nil},
	0xB4: {name: "OR A, H", length: 1, format: nil},
	0xB5: {name: "OR A, L", length: 1, format: nil},
	0xB6: {name: "OR A, [HL]", length: 1, format: nil},
	0xB7: {name: "OR A, A", length: 1, format: nil},
	0xB8: {name: "CP A, B", length: 1, format: nil},
	0xB9: {name: "CP A, C", length: 1, format: nil},
	0xBA: {name: "CP A, D", length: 1, format: nil},
	0xBB: {name: "CP A, E", length: 1, format: nil},
	0xBC: {name: "CP A, H", length: 1, format: nil},
	0xBD: {name: "CP A, L", length: 1, format: nil},
	0xBE: {name: "CP A, [HL]", length: 1, format: nil},
	0xBF: {name: "CP A, A", length: 1, format: nil},

	0xC0: {name: "RET NZ", length: 1, format: nil},
	0xC1: {name: "POP BC", length: 1, format: nil},
	0xC2: {name: "JP NZ, a16", length: 3, format: a16Formatter},
	0xC3: {name: "JP a16", length: 3, format: a16Formatter},
	0xC4: {name: "CALL NZ, a16", length: 3, format: a16Formatter},
	0xC5: {name: "PUSH BC", length: 1, format: nil},
	0xC6: {name: "ADD A, n8", length: 2, format: n8Formatter},
	0xC7: {name: "RST 00H", length: 1, format: nil},
	0xC8: {name: "RET Z", length: 1, format: nil},
	0xC9: {name: "RET", length: 1, format: nil},
	0xCA: {name: "JP Z, a16", length: 3, format: a16Formatter},
	0xCB: {name: "PREFIX CB", length: 2, format: prefixCBFormatter},
	0xCC: {name: "CALL Z, a16", length: 3, format: a16Formatter},
	0xCD: {name: "CALL a16", length: 3, format: a16Formatter},
	0xCE: {name: "ADC A, n8", length: 2, format: n8Formatter},
	0xCF: {name: "RST 08H", length: 1, format: nil},

	0xD0: {name: "RET NC", length: 1, format: nil},
	0xD1: {name: "POP DE", length: 1, format: nil},
	0xD2: {name: "JP NC, a16", length: 3, format: a16Formatter},
	0xD3: {name: "INVALID", length: 1, format: nil},
	0xD4: {name: "CALL NC, a16", length: 3, format: a16Formatter},
	0xD5: {name: "PUSH DE", length: 1, format: nil},
	0xD6: {name: "SUB A, n8", length: 2, format: n8Formatter},
	0xD7: {name: "RST 10H", length: 1, format: nil},
	0xD8: {name: "RET C", length: 1, format: nil},
	0xD9: {name: "RETI", length: 1, format: nil},
	0xDA: {name: "JP C, a16", length: 3, format: a16Formatter},
	0xDB: {name: "INVALID", length: 1, format: nil},
	0xDC: {name: "CALL C, a16", length: 3, format: a16Formatter},
	0xDD: {name: "INVALID", length: 1, format: nil},
	0xDE: {name: "SBC A, n8", length: 2, format: n8Formatter},
	0xDF: {name: "RST 18H", length: 1, format: nil},

	0xE0: {name: "LDH [a8], A", length: 2, format: a8Formatter},
	0xE1: {name: "POP HL", length: 1, format: nil},
	0xE2: {name: "LD [C], A", length: 1, format: nil},
	0xE3: {name: "INVALID", length: 1, format: nil},
	0xE4: {name: "INVALID", length: 1, format: nil},
	0xE5: {name: "PUSH HL", length: 1, format: nil},
	0xE6: {name: "AND A, n8", length: 2, format: n8Formatter},
	0xE7: {name: "RST 20H", length: 1, format: nil},
	0xE8: {name: "ADD SP, e8", length: 2, format: e8Formatter},
	0xE9: {name: "JP HL", length: 1, format: nil},
	0xEA: {name: "LD [a16], A", length: 3, format: a16Formatter},
	0xEB: {name: "INVALID", length: 1, format: nil},
	0xEC: {name: "INVALID", length: 1, format: nil},
	0xED: {name: "INVALID", length: 1, format: nil},
	0xEE: {name: "XOR A, n8", length: 2, format: n8Formatter},
	0xEF: {name: "RST 28H", length: 1, format: nil},

	0xF0: {name: "LDH A, [a8]", length: 2, format: a8Formatter},
	0xF1: {name: "POP AF", length: 1, format: nil},
	0xF2: {name: "LD A, [C]", length: 1, format: nil},
	0xF3: {name: "DI", length: 1, format: nil},
	0xF4: {name: "INVALID", length: 1, format: nil},
	0xF5: {name: "PUSH AF", length: 1, format: nil},
	0xF6: {name: "OR A, n8", length: 2, format: n8Formatter},
	0xF7: {name: "RST 30H", length: 1, format: nil},
	0xF8: {name: "LD HL, SP+e8", length: 2, format: e8Formatter},
	0xF9: {name: "LD SP, HL", length: 1, format: nil},
	0xFA: {name: "LD A, [a16]", length: 3, format: a16Formatter},
	0xFB: {name: "EI", length: 1, format: nil},
	0xFC: {name: "INVALID", length: 1, format: nil},
	0xFD: {name: "INVALID", length: 1, format: nil},
	0xFE: {name: "CP A, n8", length: 2, format: n8Formatter},
	0xFF: {name: "RST 38H", length: 1, format: nil},
}

func prefixCBFormatter(_ string, data ...uint8) string {
	names := map[uint8]string{
		0x00: "RLC B",
		0x01: "RLC C",
		0x02: "RLC D",
		0x03: "RLC E",
		0x04: "RLC H",
		0x05: "RLC L",
		0x06: "RLC [HL]",
		0x07: "RLC A",
		0x08: "RRC B",
		0x09: "RRC C",
		0x0A: "RRC D",
		0x0B: "RRC E",
		0x0C: "RRC H",
		0x0D: "RRC L",
		0x0E: "RRC [HL]",
		0x0F: "RRC A",

		0x10: "RL B",
		0x11: "RL C",
		0x12: "RL D",
		0x13: "RL E",
		0x14: "RL H",
		0x15: "RL L",
		0x16: "RL [HL]",
		0x17: "RL A",
		0x18: "RR B",
		0x19: "RR C",
		0x1A: "RR D",
		0x1B: "RR E",
		0x1C: "RR H",
		0x1D: "RR L",
		0x1E: "RR [HL]",
		0x1F: "RR A",

		0x20: "SLA B",
		0x21: "SLA C",
		0x22: "SLA D",
		0x23: "SLA E",
		0x24: "SLA H",
		0x25: "SLA L",
		0x26: "SLA [HL]",
		0x27: "SLA A",
		0x28: "SRA B",
		0x29: "SRA C",
		0x2A: "SRA D",
		0x2B: "SRA E",
		0x2C: "SRA H",
		0x2D: "SRA L",
		0x2E: "SRA [HL]",
		0x2F: "SRA A",

		0x30: "SWAP B",
		0x31: "SWAP C",
		0x32: "SWAP D",
		0x33: "SWAP E",
		0x34: "SWAP H",
		0x35: "SWAP L",
		0x36: "SWAP [HL]",
		0x37: "SWAP A",
		0x38: "SRL B",
		0x39: "SRL C",
		0x3A: "SRL D",
		0x3B: "SRL E",
		0x3C: "SRL H",
		0x3D: "SRL L",
		0x3E: "SRL [HL]",
		0x3F: "SRL A",

		0x40: "BIT 0, B",
		0x41: "BIT 0, C",
		0x42: "BIT 0, D",
		0x43: "BIT 0, E",
		0x44: "BIT 0, H",
		0x45: "BIT 0, L",
		0x46: "BIT 0, [HL]",
		0x47: "BIT 0, A",
		0x48: "BIT 1, B",
		0x49: "BIT 1, C",
		0x4A: "BIT 1, D",
		0x4B: "BIT 1, E",
		0x4C: "BIT 1, H",
		0x4D: "BIT 1, L",
		0x4E: "BIT 1, [HL]",
		0x4F: "BIT 1, A",

		0x50: "BIT 2, B",
		0x51: "BIT 2, C",
		0x52: "BIT 2, D",
		0x53: "BIT 2, E",
		0x54: "BIT 2, H",
		0x55: "BIT 2, L",
		0x56: "BIT 2, [HL]",
		0x57: "BIT 2, A",
		0x58: "BIT 3, B",
		0x59: "BIT 3, C",
		0x5A: "BIT 3, D",
		0x5B: "BIT 3, E",
		0x5C: "BIT 3, H",
		0x5D: "BIT 3, L",
		0x5E: "BIT 3, [HL]",
		0x5F: "BIT 3, A",

		0x60: "BIT 4, B",
		0x61: "BIT 4, C",
		0x62: "BIT 4, D",
		0x63: "BIT 4, E",
		0x64: "BIT 4, H",
		0x65: "BIT 4, L",
		0x66: "BIT 4, [HL]",
		0x67: "BIT 4, A",
		0x68: "BIT 5, B",
		0x69: "BIT 5, C",
		0x6A: "BIT 5, D",
		0x6B: "BIT 5, E",
		0x6C: "BIT 5, H",
		0x6D: "BIT 5, L",
		0x6E: "BIT 5, [HL]",
		0x6F: "BIT 5, A",

		0x70: "BIT 6, B",
		0x71: "BIT 6, C",
		0x72: "BIT 6, D",
		0x73: "BIT 6, E",
		0x74: "BIT 6, H",
		0x75: "BIT 6, L",
		0x76: "BIT 6, [HL]",
		0x77: "BIT 6, A",
		0x78: "BIT 7, B",
		0x79: "BIT 7, C",
		0x7A: "BIT 7, D",
		0x7B: "BIT 7, E",
		0x7C: "BIT 7, H",
		0x7D: "BIT 7, L",
		0x7E: "BIT 7, [HL]",
		0x7F: "BIT 7, A",

		0x80: "RES 0, B",
		0x81: "RES 0, C",
		0x82: "RES 0, D",
		0x83: "RES 0, E",
		0x84: "RES 0, H",
		0x85: "RES 0, L",
		0x86: "RES 0, [HL]",
		0x87: "RES 0, A",
		0x88: "RES 1, B",
		0x89: "RES 1, C",
		0x8A: "RES 1, D",
		0x8B: "RES 1, E",
		0x8C: "RES 1, H",
		0x8D: "RES 1, L",
		0x8E: "RES 1, [HL]",
		0x8F: "RES 1, A",

		0x90: "RES 2, B",
		0x91: "RES 2, C",
		0x92: "RES 2, D",
		0x93: "RES 2, E",
		0x94: "RES 2, H",
		0x95: "RES 2, L",
		0x96: "RES 2, [HL]",
		0x97: "RES 2, A",
		0x98: "RES 3, B",
		0x99: "RES 3, C",
		0x9A: "RES 3, D",
		0x9B: "RES 3, E",
		0x9C: "RES 3, H",
		0x9D: "RES 3, L",
		0x9E: "RES 3, [HL]",
		0x9F: "RES 3, A",

		0xA0: "RES 4, B",
		0xA1: "RES 4, C",
		0xA2: "RES 4, D",
		0xA3: "RES 4, E",
		0xA4: "RES 4, H",
		0xA5: "RES 4, L",
		0xA6: "RES 4, [HL]",
		0xA7: "RES 4, A",
		0xA8: "RES 5, B",
		0xA9: "RES 5, C",
		0xAA: "RES 5, D",
		0xAB: "RES 5, E",
		0xAC: "RES 5, H",
		0xAD: "RES 5, L",
		0xAE: "RES 5, [HL]",
		0xAF: "RES 5, A",

		0xB0: "RES 6, B",
		0xB1: "RES 6, C",
		0xB2: "RES 6, D",
		0xB3: "RES 6, E",
		0xB4: "RES 6, H",
		0xB5: "RES 6, L",
		0xB6: "RES 6, [HL]",
		0xB7: "RES 6, A",
		0xB8: "RES 7, B",
		0xB9: "RES 7, C",
		0xBA: "RES 7, D",
		0xBB: "RES 7, E",
		0xBC: "RES 7, H",
		0xBD: "RES 7, L",
		0xBE: "RES 7, [HL]",
		0xBF: "RES 7, A",

		0xC0: "SET 0, B",
		0xC1: "SET 0, C",
		0xC2: "SET 0, D",
		0xC3: "SET 0, E",
		0xC4: "SET 0, H",
		0xC5: "SET 0, L",
		0xC6: "SET 0, [HL]",
		0xC7: "SET 0, A",
		0xC8: "SET 1, B",
		0xC9: "SET 1, C",
		0xCA: "SET 1, D",
		0xCB: "SET 1, E",
		0xCC: "SET 1, H",
		0xCD: "SET 1, L",
		0xCE: "SET 1, [HL]",
		0xCF: "SET 1, A",

		0xD0: "SET 2, B",
		0xD1: "SET 2, C",
		0xD2: "SET 2, D",
		0xD3: "SET 2, E",
		0xD4: "SET 2, H",
		0xD5: "SET 2, L",
		0xD6: "SET 2, [HL]",
		0xD7: "SET 2, A",
		0xD8: "SET 3, B",
		0xD9: "SET 3, C",
		0xDA: "SET 3, D",
		0xDB: "SET 3, E",
		0xDC: "SET 3, H",
		0xDD: "SET 3, L",
		0xDE: "SET 3, [HL]",
		0xDF: "SET 3, A",

		0xE0: "SET 4, B",
		0xE1: "SET 4, C",
		0xE2: "SET 4, D",
		0xE3: "SET 4, E",
		0xE4: "SET 4, H",
		0xE5: "SET 4, L",
		0xE6: "SET 4, [HL]",
		0xE7: "SET 4, A",
		0xE8: "SET 5, B",
		0xE9: "SET 5, C",
		0xEA: "SET 5, D",
		0xEB: "SET 5, E",
		0xEC: "SET 5, H",
		0xED: "SET 5, L",
		0xEE: "SET 5, [HL]",
		0xEF: "SET 5, A",

		0xF0: "SET 6, B",
		0xF1: "SET 6, C",
		0xF2: "SET 6, D",
		0xF3: "SET 6, E",
		0xF4: "SET 6, H",
		0xF5: "SET 6, L",
		0xF6: "SET 6, [HL]",
		0xF7: "SET 6, A",
		0xF8: "SET 7, B",
		0xF9: "SET 7, C",
		0xFA: "SET 7, D",
		0xFB: "SET 7, E",
		0xFC: "SET 7, H",
		0xFD: "SET 7, L",
		0xFE: "SET 7, [HL]",
		0xFF: "SET 7, A",
	}
	return names[data[0]]
}
